name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - noir

jobs:
  rust:
    name: Rust CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: crates
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust 1.85.0
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.85.0
          components: rustfmt
          override: true

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: crates -> target

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run tests
        run: cargo test

      - name: Build
        run: cargo build --release

  noir:
    name: Noir CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: circuits
    steps:
      - uses: actions/checkout@v4

      - name: Install Nargo
        uses: noir-lang/noirup@v0.1.3
        with:
          toolchain: stable

      - name: Check Noir formatting
        run: nargo fmt --check

      - name: Build Noir project
        run: nargo check

      - name: Run Noir tests
        run: nargo test

  noir-examples:
    name: Noir Examples CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: examples
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust 1.85.0
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.85.0
          override: true

      - name: Install Nargo
        uses: noir-lang/noirup@v0.1.3
        with:
          toolchain: stable

      - name: Install bbup (Barretenberg)
        run: |
          curl -L https://raw.githubusercontent.com/AztecProtocol/aztec-packages/refs/heads/master/barretenberg/bbup/install | bash
          export PATH="$HOME/.bb:$PATH"
          bbup
          bb --version

      - name: Generate Prover.toml
        working-directory: crates
        run: cargo run --bin generator -- -o ../examples/pk_encryption/Prover.toml && rm -rf ../examples/pk_encryption/constants.nr

      - name: Build and prove pk_encryption example
        working-directory: examples/pk_encryption
        run: |
          nargo compile
          bb prove -b ./target/pk_encryption.json -w ./target/pk_encryption.gz -o ./target
          bb verify -k ./target/vk -p ./target/proof
